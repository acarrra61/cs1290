public class MinimumPathSum
{
  public static void main(String[] args)
  {
    public int minFallingPathSum(int[][] grid) 
    {
        int m = grid.length; int n = grid[0].length;
        int[][] dp = new int[m][n];    
        for(int i = 0; i < n; i++)
        {
            dp[0][i] = grid[0][i]; // base case, filling up the input.
        }
        int min = Integer.MAX_VALUE;
        for(int i = 1; i < m; i++)
        {
            for(int j = 0; j < n; j++)
            {
             if(j == 0)
             {
              dp[i][j] = grid[i][j] + Math.min(dp[i-1][j], dp[i-1][j+1]);
             }
              else if(j == n-1)
              {
               dp[i][j] = grid[i][j] + Math.min(dp[i-1][j], dp[i-1][j-1]);
              }
              else
              {
               dp[i][j] = grid[i][j]+Math.min(dp[i-1][j], dp[i-1][j-1], dp[i-1][j+1]);
              }
            }
        }
    }
  }
}
       
